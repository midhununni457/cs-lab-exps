DATA SEGMENT
    ARR DW 5324H, 1234H, 6789H, 4321H, 8765H
    N EQU 5
    MSG1 DB 10,13 'BEFORE: $'
    MSG2 DB 10,13 'AFTER: $'
DATA ENDS

CODE SEGMENT
ASSUME  CS:CODE, DS:DATA

START:
    MOV AX, DATA
    MOV DS, AX

    LEA DX, MSG1
    MOV AH, 09H
    INT 21H
    CALL DISPLAY_ARRAY

    MOV CX, N

OUTER_LOOP:
    MOV CX, N
    MOV BX, CX
    LEA SI, ARR
INNER_LOOP:
    MOV AX, [SI]
    CMP AX, [SI+2]
    JBE SKIP_SWAP

    XCHG AX, [SI+2]
    MOV [SI], AX

SKIP_SWAP:
    ADD SI, 2
    DEC BX
    JNZ INNER_LOOP
    CMP CX, 1
    JG OUTER_LOOP

    LEA DX, MSG2
    MOV AH, 09H
    INT 21H
    CALL DISPLAY_ARRAY

    MOV AH, 4CH
    INT 21H

DISPLAY_ARRAY PROC:
    LEA SI, ARR
    MOV CX, N
PRINT_NEXT:
    MOV BX, [SI]
    CALL PRINT_HEX

    MOV DL, ' '
    MOV AH, 02H
    INT 21H

    ADD SI, 2
    LOOP PRINT_NEXT
    RET
DISPLAY_ARRAY ENDP

PRINT_HEX PROC
    PUSH CX
    MOV CX, 4
NEXT:
    ROL BX, 4
    MOV AL, BL
    AND AL, 0FH
    ADD AL, 30H
    CMP AL, '9'
    JBE DISP
    ADD AL, 7
DISP:
    MOV DL, AL
    MOV AH, 02H
    INT 21H
    LOOP NEXT
    POP CX
    RET
PRINT_HEX ENDP

CODE ENDS
END START